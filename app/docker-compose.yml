services:
  plandex-postgres:
    image: postgres:17.5-alpine
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: plandex
      POSTGRES_USER: plandex
      POSTGRES_DB: plandex
      POSTGRES_INITDB_ARGS: "--auth-local=scram-sha-256 --auth-host=scram-sha-256"
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
    ports:
      - "127.0.0.1:5432:5432"  # Bind to localhost only for security
    volumes:
      - plandex-db:/var/lib/postgresql/data:Z
      - ./postgresql/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./postgresql/pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
      - /dev/shm:/dev/shm  # Use shared memory for better performance
    networks:
      - plandex-network
    command: >
      postgres
      -c config_file=/etc/postgresql/postgresql.conf
      -c hba_file=/etc/postgresql/pg_hba.conf
    deploy:
      resources:
        limits:
          memory: 1G        # MacBook 2012 optimization
          cpus: '1.0'       # CPU constraint for older hardware
        reservations:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U plandex -d plandex"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - FOWNER
      - SETGID
      - SETUID
  plandex-server:
    image: plandexai/plandex-server:latest
    volumes:
      - plandex-files:/plandex-server
    ports:
      - "8099:8099"
    environment:
      DATABASE_URL: "postgres://plandex:plandex@plandex-postgres:5432/plandex?sslmode=prefer&application_name=plandex-server"
      GOENV: development
      LOCAL_MODE: 1
      PLANDEX_BASE_DIR: /plandex-server
    networks:
      - plandex-network
    depends_on:
      - plandex-postgres
    command: [ "/bin/sh", "-c", "/scripts/wait-for-it.sh plandex-postgres:5432 -- ./plandex-server" ]

networks:
  plandex-network:
    driver: bridge

volumes:
  plandex-db:
  plandex-files: